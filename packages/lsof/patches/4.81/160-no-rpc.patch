--- lsof_4.81_src/print.c	2008-10-21 19:21:52.000000000 +0300
+++ lsof_4.81_src/print.c	2009-05-07 13:09:17.618139864 +0300
@@ -77,8 +77,9 @@
 						 */
 #define HASHPORT(p)	(((((int)(p)) * 31415) >> 3) & (PORTHASHBUCKETS - 1))
 
-
+#ifdef HASRPC
 _PROTOTYPE(static void fill_portmap,(void));
+#endif
 _PROTOTYPE(static void fill_porttab,(void));
 _PROTOTYPE(static char *lkup_port,(int p, int pr, int src));
 _PROTOTYPE(static char *lkup_svcnam,(int h, int p, int pr, int ss));
@@ -103,7 +104,7 @@
 	return(s);
 }
 
-
+#ifdef HASRPC
 /*
  * fill_portmap() -- fill the RPC portmap program name table via a conversation
  *		     with the portmapper
@@ -199,7 +200,7 @@
  * and UDP members.
  */
 	for (; p; p = p->pml_next) {
-	
+
 	/*
 	 * Determine the port map entry's protocol; ignore all but TCP and UDP.
 	 */
@@ -267,6 +268,7 @@
 	}
 	clnt_destroy(c);
 }
+#endif
 
 
 /*
@@ -487,10 +489,12 @@
  * If we're looking up program names for portmapped ports, make sure the
  * portmap table has been loaded.
  */
+#ifdef HASRPC
 	if (FportMap && !pm) {
 	    (void) fill_portmap();
 	    pm++;
 	}
+#endif
 /*
  * Hash the port and see if its name has been cached.  Look for a local
  * port first in the portmap, if portmap searching is enabled.
@@ -841,7 +845,7 @@
 			FsColW = len;
 		} else
 		    (void) printf(" %*.*s", FsColW, FsColW, cp);
-		    
+
 	    }
 # endif	/* !defined(HASNOFSADDR) */
 
@@ -1905,7 +1909,7 @@
 	}
 	if (s)
 	    (void) snpf(Lf->iproto, sizeof(Lf->iproto), "%.*s", IPROTOL-1, s);
-	else {	
+	else {
 	    if (m < 0) {
 		for (i = 0, m = 1; i < IPROTOL-2; i++)
 		    m *= 10;
@@ -2037,7 +2041,7 @@
 		    NcacheReload = 0;
 		}
 		if ((cp = ncache_lookup(buf, sizeof(buf), &fp))) {
-		    char *cp1; 
+		    char *cp1;
 
 		    if (*cp == '\0')
 			goto print_nma;
@@ -2678,13 +2682,13 @@
 #endif	/* defined(pseudo_AF_KEY) */
 
 #if	defined(AF_KEY)		/* Security Association DB socket */
-	case AF_KEY:			
+	case AF_KEY:
 	    s = "KEY";
 	    break;
 #endif	/* defined(AF_KEY) */
 
 #if	defined(AF_NCA)		/* NCA socket */
-	case AF_NCA:			
+	case AF_NCA:
 	    s = "NCA";
 	    break;
 #endif	/* defined(AF_NCA) */
@@ -2696,7 +2700,7 @@
 #endif	/* defined(AF_POLICY) */
 
 #if	defined(AF_PPP)		/* PPP socket */
-	case AF_PPP:			
+	case AF_PPP:
 	    s = "PPP";
 	    break;
 #endif	/* defined(AF_PPP) */
