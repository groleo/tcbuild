#! /bin/sh

# Copyright (C) 2008 by Guy Rutenberg

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the
# Free Software Foundation, Inc.,
# 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

PROG=tarsum
DESCRIPTION="Generate a signature file for files inside a tarball"
SYNOPSIS="${PROG} [options] TARBALL"
VERSION=0.1

print_usage () {
    echo "Usage: ${SYNOPSIS}"
    cat << EOF
Create a signature file for all files in TARBALL. Signature file is piped to
standard output by default (this can be changed by using --output).
EOF
}
print_help ()  {
    print_usage
    cat << EOF

Options:
    -h, --help          show this help message and exit
    --version           show program's version number and exit
    --checksum=HASH     use HASH tool. Must be compatible with md5sum.
    -o, --output=FILE   save signatures to FILE
    -v, --verbose       be verbose about progres
Mandatory arguments to long options are mandatory for short options too.

Example:
    tarsum backup.tar > backup.tar.sig
EOF
}

print_version () {
    echo "$PROG $VERSION"
    echo "Copyright (C) 2008 Guy Rutenberg <http://www.guyrutenberg.com>"
}

# print only if verbose
vecho () {
    if (( "$VERBOSE" >= "$1" )) ; then
        echo "$2"
    fi
}
# sends output to $1
generate_hash () {
    find -type f -print0 | sort -z | xargs -0 "$CHECKSUM" > "$1"
}
# default values (where possible)
VERBOSE=0
CHECKSUM=md5sum
TEMP=`getopt -o ho:v --long help,version,verbose,output:,checksum: \
    -n '${PROG}' -- "$@"`
if [ $? != 0 ] ; then
    print_usage
    exit 1
fi

eval set -- "$TEMP"

while true ; do
    case "$1" in
        -h|--help) print_help; exit ;;
        --version) print_version; exit ;;
        -v|--verbose) let VERBOSE++ ; shift ;;
        --checksum) CHECKSUM="$2"; shift 2 ;;
        -o|--output) OUTPUT="$2"; shift 2 ;;
        --) shift; break;;
    esac
done

# no tarball
if [ -z "$1" ]; then
    echo "$PROG: missing TARBALL"
    echo ""
    print_usage
    exit 1
fi

TARBALL="$1"

TEMPDIR=`mktemp -d /tmp/tarsum.XXXXXXXXXX`

tar -xf "$TARBALL" -C "$TEMPDIR"
ORIGDIR=`pwd`
cd "$TEMPDIR"

if [ -z "$OUTPUT" ]; then
    generate_hash /dev/stdout
else
    TEMPSIG=`mktemp /tmp/tarsum.XXXXXXXXXX`
    generate_hash "$TEMPSIG"

    cd "$ORIGDIR"
    mv -i "$TEMPSIG" "$OUTPUT"
fi

rm -rf "$TEMPDIR"

# vim:sw=4:softtabstop=4:expandtab

