--- uClibc-0.9.30.1.orig/ldso/ldso/m68k/dl-sysdep.h	2008-09-15 19:36:11.000000000 +0300
+++ uClibc-0.9.30.1/ldso/ldso/m68k/dl-sysdep.h	2009-03-27 17:39:11.460994143 +0200
@@ -26,9 +26,9 @@
 extern unsigned long _dl_linux_resolver (struct elf_resolve *, int);
 
 /* 4096 bytes alignment */
-#define PAGE_ALIGN 0xfffff000
-#define ADDR_ALIGN 0xfff
-#define OFFS_ALIGN 0x7ffff000
+#define ADDR_ALIGN (_dl_pagesize-1)
+#define PAGE_ALIGN (0xFFFFFFFF-ADDR_ALIGN)
+#define OFFS_ALIGN (0x7FFFFFFF-ADDR_ALIGN)
 
 /* ELF_RTYPE_CLASS_PLT iff TYPE describes relocation of a PLT entry, so
    PLT entries should not be allowed to define the value.
@@ -41,26 +41,37 @@
 /* Return the link-time address of _DYNAMIC.  Conveniently, this is the
    first element of the GOT.  This must be inlined in a function which
    uses global data.  */
-static __inline__ Elf32_Addr
+static __always_inline Elf32_Addr
 elf_machine_dynamic (void)
 {
-	register Elf32_Addr *got __asm__ ("%a5");
-	return *got;
+	Elf32_Addr addr;
+
+	__asm__ ("move.l _DYNAMIC@GOT.w(%%a5), %0"
+			: "=a" (addr));
+	return addr;
 }
 
+#ifdef __mcoldfire__
+#define PCREL_OP(OP, SRC, DST, TMP, PC) \
+  "move.l #" SRC " - ., " TMP "\n\t" OP " (-8, " PC ", " TMP "), " DST
+#else
+#define PCREL_OP(OP, SRC, DST, TMP, PC) \
+  OP " " SRC "(" PC "), " DST
+#endif
+
 
 /* Return the run-time load address of the shared object.  */
-static __inline__ Elf32_Addr
+static __always_inline Elf32_Addr
 elf_machine_load_address (void)
 {
 	Elf32_Addr addr;
-	__asm__ ("lea _dl_start(%%pc), %0\n\t"
-	     "sub.l _dl_start@GOT.w(%%a5), %0"
-	     : "=a" (addr));
+	__asm__ (PCREL_OP ("lea", "_dl_start", "%0", "%0", "%%pc") "\n\t"
+			"sub.l _dl_start@GOT.w(%%a5), %0"
+			: "=a" (addr));
 	return addr;
 }
 
-static __inline__ void
+static __always_inline void
 elf_machine_relative (Elf32_Addr load_off, const Elf32_Addr rel_addr,
 		      Elf32_Word relative_count)
 {
