# uClibc options
config LIBC
    string

config LIBC_uClibc
    bool
    select LIBC_SUPPORT_LINUXTHREADS
    help
      The de-facto standard for embeded linux systems.
      Highly configurable, thus as feature-rich as you need, without
      compromising for size.

choice
    bool
    prompt "uClibc version"

config LIBC_V_0_9_28_3
    bool
    prompt "0.9.28.3"

config LIBC_V_0_9_29
    bool
    prompt "0.9.29"

config LIBC_V_0_9_30
    bool
    prompt "0.9.30"

config LIBC_V_0_9_30_1
    bool
    prompt "0.9.30.1"

# CT_INSERT_VERSION_ABOVE
# Don't remove above line!

config LIBC_V_snapshot
    bool
    prompt "latest snapshot (EXPERIMENTAL)"
    depends on EXPERIMENTAL

config LIBC_V_specific_date
    bool
    prompt "<specific date> (EXPERIMENTAL)"
    depends on EXPERIMENTAL

endchoice

config LIBC_VERSION
    string
    prompt "Enter date (YYYYMMDD)" if LIBC_V_specific_date
    default "snapshot" if LIBC_V_snapshot
    default "0.9.28" if LIBC_V_0_9_28
    default "0.9.28.1" if LIBC_V_0_9_28_1
    default "0.9.28.2" if LIBC_V_0_9_28_2
    default "0.9.28.3" if LIBC_V_0_9_28_3
    default "0.9.29" if LIBC_V_0_9_29
    default "0.9.30" if LIBC_V_0_9_30
    default "0.9.30.1" if LIBC_V_0_9_30_1
# CT_INSERT_VERSION_STRING_ABOVE
# Don't remove above line!

config LIBC_UCLIBC_PARALLEL
    bool
    prompt "Build uClibc in //" if LIBC_V_snapshot || LIBC_V_specific_date
    default n
    help
      Build uClibc using parallel jobs.
      Some 'old' versions won't build in //, but it works starting with
      0.9.30 release candidates.

choice
    bool
    prompt "uClibc verbosity:"
    default LIBC_UCLIBC_VERBOSITY_0

config LIBC_UCLIBC_VERBOSITY_0
    bool
    prompt "Simplified"
    help
      Print simplified command lines.

config LIBC_UCLIBC_VERBOSITY_1
    bool
    prompt "Full commands"
    help
      Print full command lines.

endchoice

config LIBC_UCLIBC_VERBOSITY
    string
    default ""      if LIBC_UCLIBC_VERBOSITY_0
    default "V=1"   if LIBC_UCLIBC_VERBOSITY_1

choice
    bool
    prompt "Debug level"
    default LIBC_UCLIBC_DEBUG_LEVEL_0

config LIBC_UCLIBC_DEBUG_LEVEL_0
    bool
    prompt "none"

config LIBC_UCLIBC_DEBUG_LEVEL_1
    bool
    prompt "minimal"

config LIBC_UCLIBC_DEBUG_LEVEL_2
    bool
    prompt "all"

endchoice

config LIBC_UCLIBC_DEBUG_LEVEL
    int
    default 0 if LIBC_UCLIBC_DEBUG_LEVEL_0
    default 1 if LIBC_UCLIBC_DEBUG_LEVEL_1
    default 2 if LIBC_UCLIBC_DEBUG_LEVEL_2

config LIBC_UCLIBC_BUILD_CROSS_LDD
    bool
    prompt "Build cross-ldd"
    default y
    help
      Say 'y' here to build a cross-ldd to run in the host.

      Building a cross-ldd only works on ELF systems, that is,
      if you build under Cygwin, you *must* say 'n' here.

config LIBC_UCLIBC_CONFIG_FILE
    string
    prompt "Configuration file"
    default "${CT_TLC_DIR}/libc/uClibc/${CT_ARCH}/uClibc.config"
    help
      Path to the configuration file.
      Default is "${CT_TLC_DIR}/libc/uClibc/${CT_ARCH}/uClibc.config"
      You _must_ provide one (for now).

config LIBC_UCLIBC_LOCALES
    bool
    prompt "Add support for locales"
    default n
    help
      Say y if you want uClibc to support localisation.

      Note that seems to be broken on recent uClibc releases.

config LIBC_UCLIBC_RUN_CONFIG
    bool
    prompt "Run make config"
    default n
    help
      Say y if you want to reconfigure uClibc at compile time.

