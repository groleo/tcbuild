# glibc options
config LIBC
    string

config LIBC_glibc
    select LIBC_SUPPORT_NPTL
    select LIBC_SUPPORT_LINUXTHREADS
    help
      The de-facto standard for Linux distributions.
      Feature-rich, but large...  Most usefull for desktop-like systems.

choice
    bool
    prompt "glibc version"

config LIBC_V_2_3_6
    bool
    prompt "2.3.6 (OBSOLETE)"
    depends on OBSOLETE

config LIBC_V_2_5
    bool
    prompt "2.5"

config LIBC_V_2_5_1
    bool
    prompt "2.5.1"

config LIBC_V_2_6
    bool
    prompt "2.6"

config LIBC_V_2_6_1
    bool
    prompt "2.6.1"

config LIBC_V_2_7
    bool
    prompt "2.7"

config LIBC_V_2_8
    bool
    prompt "2.8"

config LIBC_V_2_9
    bool
    prompt "2.9"

# CT_INSERT_VERSION_ABOVE
# Don't remove above line!

config LIBC_V_LATEST
    bool
    prompt "'latest' snapshot (EXPERIMENTAL)"
    depends on EXPERIMENTAL

config LIBC_V_date
    bool
    prompt "<specific date> (EXPERIMENTAL)"
    depends on EXPERIMENTAL

endchoice

config LIBC_VERSION
    string
    prompt "Enter date (YYYYMMDD)" if LIBC_V_date
    default "latest" if LIBC_V_LATEST
    default "2.3.6" if LIBC_V_2_3_6
    default "2.4" if LIBC_V_2_4
    default "2.5" if LIBC_V_2_5
    default "2.5.1" if LIBC_V_2_5_1
    default "2.6" if LIBC_V_2_6
    default "2.6.1" if LIBC_V_2_6_1
    default "2.7" if LIBC_V_2_7
    default "2.8" if LIBC_V_2_8
    default "2.9" if LIBC_V_2_9
# CT_INSERT_VERSION_STRING_ABOVE
# Don't remove above line!

choice
    bool
    prompt "Retrieval method"
    default LIBC_GLIBC_TARBALL

config LIBC_GLIBC_TARBALL
    bool
    prompt "Released tarball"
    help
      Until end of Februrary 2009, there was no tarball for glibc releases
      2.8 and later. This was intentional.
      
      Then, all of a sudden, tarballs for those releases have appeared at the
      traditional download place (ftp.gnu.org).
      
      Some of the glibc people argue that fixes are committed to the maintenance
      branch, and thus it is the best plac e to retrieve the glibc from.
      On the other hand, it might be preferable to always generate a toolchain
      using a known code-base, so the toolchain can be reproducible.
      
      For version prior to 2.8, tarballs were readily available.
      
      If you want your toolchain to really be reproducible, say 'Y' here.
      If you can live with a moving code-base, look at the other choice
      entries, below.

config LIBC_GLIBC_CVS
    bool
    prompt "CVS checkout"
    help
      See the help for the entry "Released tarball", above.
      
      If you can live with a moving code-base, say 'Y' here.
      If you want your toolchain to really be reproducible, look at the
      choice entry "Released tarball from FTP", above.

if LIBC_GLIBC_CVS

config LIBC_GLIBC_CVS_date
    string
    prompt "checkout as of date"
    default ""
    help
      The date, in ISO-8601 format, at which to check out the repository.

endif #  LIBC_GLIBC_CVS

#config LIBC_GLIBC_SNAPSHOT
#    bool
#    prompt "Use latest nightly snapshot"
#    help
#      See the help for the entry "Released tarball", above.
#      
#      If you can live with a moving code-base, say 'Y' here.
#      If you want your toolchain to really be reproducible, look at the
#      choice entry "Released tarball from FTP", above.

endchoice
