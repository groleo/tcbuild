From 3dda196db802260444d66ca4fca5b5cf84b9a7c1 Mon Sep 17 00:00:00 2001
From: Kurt Mahan <kmahan@freescale.com>
Date: Mon, 3 Nov 2008 16:30:28 -0700
Subject: [PATCH] Update arch makefile to build uImages.

LTIBName: mcfv4e-makefile-uimage
Signed-off-by: Kurt Mahan <kmahan@freescale.com>
---
 arch/m68k/Makefile      |   15 +++++++++-
 arch/m68k/boot/Makefile |   68 +++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 82 insertions(+), 1 deletions(-)
 create mode 100644 arch/m68k/boot/Makefile

diff --git a/arch/m68k/Makefile b/arch/m68k/Makefile
index 5a96529..793c936 100644
--- a/arch/m68k/Makefile
+++ b/arch/m68k/Makefile
@@ -33,7 +33,7 @@ LDFLAGS_vmlinux = -N
 endif
 
 ifdef CONFIG_COLDFIRE
-# OBJCOPYFLAGS    := -R .note -R .note.gnu.build-id -R .comment -S
+OBJCOPYFLAGS	:= -O binary -R .note -R .note.gnu.build-id -R .comment -S
 # LDFLAGS_vmlinux = --verbose
 endif
 
@@ -103,6 +103,18 @@ core-$(CONFIG_M68060)		+= arch/m68k/ifpsp060/
 core-$(CONFIG_M68KFPU_EMU)	+= arch/m68k/math-emu/
 core-$(CONFIG_COLDFIRE)		+= arch/m68k/coldfire/
 
+ifdef CONFIG_COLDFIRE
+boot := arch/m68k/boot
+
+all:	uImage
+
+zImage zImage.srec uImage uImage.srec vmlinux.srec: vmlinux
+	$(Q)$(MAKE) $(build)=$(boot) $(boot)/$@
+
+archclean:
+	$(Q)$(MAKE) $(clean)=$(boot)
+
+else
 all:	zImage
 
 lilo:	vmlinux
@@ -140,3 +152,4 @@ endif
 
 archclean:
 	rm -f vmlinux.gz vmlinux.bz2
+endif
diff --git a/arch/m68k/boot/Makefile b/arch/m68k/boot/Makefile
new file mode 100644
index 0000000..36397b1
--- /dev/null
+++ b/arch/m68k/boot/Makefile
@@ -0,0 +1,68 @@
+#
+# arch/m68k/boot/Makefile
+#
+# Based on arch/sh/boot/Makefile by Stuart Menefy
+#
+# Copyright (c) 2008 Freescale Semiconductor, Inc.  All Rights Reserved.
+#	by Kurt Mahan <kmahan@freescale.com>
+#
+# This file is subject to the terms and conditions of the GNU General Public
+# License.  See the file "COPYING" in the main directory of this archive
+# for more details.
+#
+
+MKIMAGE := $(srctree)/scripts/mkuboot.sh
+
+#
+# Assign safe dummy values if these variables are not defined,
+# in order to suppress error message.
+#
+CONFIG_SDRAM_BASE	?= 0x40000000
+CONFIG_IMG_START	?= 0x00020000
+
+export CONFIG_SDRAM_BASE CONFIG_IMG_START
+
+targets := zImage zImage.srec vmlinux.srec uImage uImage.srec
+
+$(obj)/zImage: $(obj)/vmlinux.bin FORCE
+	$(call if_changed,gzip)
+	@echo '  Image $@ is ready'
+
+OBJCOPYFLAGS_zImage.srec := -I binary -O srec
+$(obj)/zImage.srec: $(obj)/zImage
+	$(call if_changed,objcopy)
+
+KERNEL_LOAD	:= $(shell /bin/bash -c 'printf "0x%08x" \
+		     $$[$(CONFIG_SDRAM_BASE)  + \
+			$(CONFIG_IMG_START)]')
+
+KERNEL_ENTRY	:= $(shell /bin/bash -c 'printf "0x%08x" \
+		     $$[$(CONFIG_SDRAM_BASE)  + \
+			$(CONFIG_IMG_START)]')
+
+quiet_cmd_uimage = UIMAGE  $@
+	cmd_uimage = $(CONFIG_SHELL) $(MKIMAGE) -A m68k -O linux -T kernel \
+		   -C gzip -a $(KERNEL_LOAD) -e $(KERNEL_ENTRY) \
+		   -n 'Linux-$(KERNELRELEASE)' -d $< $@
+
+$(obj)/uImage: $(obj)/vmlinux.bin.gz FORCE
+	$(call if_changed,uimage)
+	@echo '  Image $@ is ready'
+
+$(obj)/vmlinux.bin: vmlinux FORCE
+	$(call if_changed,objcopy)
+
+$(obj)/vmlinux.bin.gz: $(obj)/vmlinux.bin FORCE
+	$(call if_changed,gzip)
+
+OBJCOPYFLAGS_vmlinux.srec := -I binary -O srec
+$(obj)/vmlinux.srec: $(obj)/vmlinux.bin
+	$(call if_changed,objcopy)
+
+OBJCOPYFLAGS_uImage.srec := -I binary -O srec
+$(obj)/uImage.srec: $(obj)/uImage
+	$(call if_changed,objcopy)
+
+clean-files	+= uImage uImage.srec \
+		   zImage zImage.srec \
+		   vmlinux.srec vmlinux.bin vmlinux.bin.gz
-- 
1.6.0.1

