From 0a7568744ffdffb21a0f229406d249426500a839 Mon Sep 17 00:00:00 2001
From: Jason Jin <Jason.jin@freescale.com>
Date: Thu, 3 Jun 2010 12:23:20 +0800
Subject: [PATCH 09/18] Add FlexCAN driver support on m5441x platform

Tested SER-1 card and SER-2 card with cantest utility

Signed-off-by: Lanttor Guo <lanttor.guo@freescale.com>
---
 arch/m68k/include/asm/mcf5441x_flexcan.h |  139 ++++++++++++++++++++++++++++++
 arch/m68k/include/asm/mcfsim.h           |    2 +
 drivers/net/can/Kconfig                  |    4 +-
 drivers/net/can/Makefile                 |    2 +
 drivers/net/can/flexcan/flexcan.c        |   36 +++++++-
 drivers/net/can/flexcan/mcf-flexcan.c    |   57 ++++++++++++-
 6 files changed, 235 insertions(+), 5 deletions(-)
 create mode 100644 arch/m68k/include/asm/mcf5441x_flexcan.h

diff --git a/arch/m68k/include/asm/mcf5441x_flexcan.h b/arch/m68k/include/asm/mcf5441x_flexcan.h
new file mode 100644
index 0000000..6ca511e
--- /dev/null
+++ b/arch/m68k/include/asm/mcf5441x_flexcan.h
@@ -0,0 +1,139 @@
+/*
+ * Copyright (C) 2010 Freescale Semiconductor, Inc. All rights reserved.
+ *
+ * Author: Lanttor Guo <b18203@freescale.com>
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ */
+
+#ifndef MCF5441X_FLEXCAN_H
+#define MCF5441X_FLEXCAN_H
+/*
+ *      FlexCAN Module Configuration Register
+ */
+#define CANMCR_MDIS		(0x80000000)
+#define CANMCR_FRZ		(0x40000000)
+#define CANMCR_FEN		(0x20000000)
+#define CANMCR_HALT		(0x10000000)
+#define CANMCR_SOFTRST		(0x02000000)
+#define CANMCR_NOTRDY		(0x08000000)
+#define CANMCR_FRZACK		(0x01000000)
+#define CANMCR_SUPV		(0x00800000)
+#define CANMCR_WARN_EN		(0x00200000)
+#define CANMCR_LPMACK		(0x00100000)
+#define CANMCR_DOZE		(0x00040000)
+#define CANMCR_SRXDIS		(0x00020000)
+#define CANMCR_BCC		(0x00010000)
+#define CANMCR_LPRIO_EN		(0x00002000)
+#define CANMCR_AEN		(0x00001000)
+#define CANMCR_IDAM_VAL(x)	((x & 0x3) << 8)
+#define CANMCR_MAXMB		(0x0F)
+/*
+ *      FlexCAN Control Register
+ */
+#define CANCTRL_PRESDIV(x)      (((x)&0xFF)<<24)
+#define CANCTRL_RJW(x)          (((x)&0x03)<<22)
+#define CANCTRL_PSEG1(x)        (((x)&0x07)<<19)
+#define CANCTRL_PSEG2(x)        (((x)&0x07)<<16)
+#define CANCTRL_BOFFMSK         (0x00008000)
+#define CANCTRL_ERRMSK	        (0x00004000)
+#define CANCTRL_CLKSRC		(0x00002000)
+#define CANCTRL_LPB	        (0x00001000)
+#define CANCTRL_TWRN_MSK	(0x00000800)
+#define CANCTRL_RWRN_MSK	(0x00000400)
+#define CANCTRL_SAMP(x)	        (((x)&0x01)<<7)
+#define CANCTRL_BOFFREC         (0x00000040)
+#define CANCTRL_TSYNC           (0x00000020)
+#define CANCTRL_LBUF            (0x00000010)
+#define CANCTRL_LOM             (0x00000008)
+#define CANCTRL_PROPSEG(x)      ((x)&0x07)
+
+/*
+ *      FlexCAN Error Counter Register
+ */
+#define ERRCNT_RXECTR(x)        (((x)&0xFF)<<8)
+#define ERRCNT_TXECTR(x)        ((x)&0xFF)
+
+/*
+ *      FlexCAN Error and Status Register
+ */
+#define ERRSTAT_TWRN_INT	 (0x00020000)
+#define ERRSTAT_RWRN_INT	 (0x00010000)
+#define ERRSTAT_BITERR(x)       (((x)&0x03)<<14)
+#define ERRSTAT_ACKERR           (0x00002000)
+#define ERRSTAT_CRCERR           (0x00001000)
+#define ERRSTAT_FRMERR           (0x00000800)
+#define ERRSTAT_STFERR           (0x00000400)
+#define ERRSTAT_TXWRN            (0x00000200)
+#define ERRSTAT_RXWRN            (0x00000100)
+#define ERRSTAT_IDLE             (0x00000080)
+#define ERRSTAT_TXRX             (0x00000040)
+#define ERRSTAT_FLTCONF(x)       (((x)&0x03)<<4)
+#define ERRSTAT_BOFFINT          (0x00000004)
+#define ERRSTAT_ERRINT           (0x00000002)
+
+/*
+ *      Interrupt Mask Register
+ */
+#define IMASK_BUF15M		(0x8000)
+#define IMASK_BUF14M		(0x4000)
+#define IMASK_BUF13M		(0x2000)
+#define IMASK_BUF12M		(0x1000)
+#define IMASK_BUF11M		(0x0800)
+#define IMASK_BUF10M		(0x0400)
+#define IMASK_BUF9M		(0x0200)
+#define IMASK_BUF8M		(0x0100)
+#define IMASK_BUF7M		(0x0080)
+#define IMASK_BUF6M		(0x0040)
+#define IMASK_BUF5M		(0x0020)
+#define IMASK_BUF4M		(0x0010)
+#define IMASK_BUF3M		(0x0008)
+#define IMASK_BUF2M		(0x0004)
+#define IMASK_BUF1M		(0x0002)
+#define IMASK_BUF0M		(0x0001)
+#define IMASK_BUFnM(x)		(0x1<<(x))
+#define IMASK_BUFF_ENABLE_ALL	(0xFFFF)
+#define IMASK_BUFF_DISABLE_ALL	(0x0000)
+
+/*
+ *      Interrupt Flag Register
+ */
+#define IFLAG_BUF15M		(0x8000)
+#define IFLAG_BUF14M		(0x4000)
+#define IFLAG_BUF13M		(0x2000)
+#define IFLAG_BUF12M		(0x1000)
+#define IFLAG_BUF11M		(0x0800)
+#define IFLAG_BUF10M		(0x0400)
+#define IFLAG_BUF9M		(0x0200)
+#define IFLAG_BUF8M		(0x0100)
+#define IFLAG_BUF7M		(0x0080)
+#define IFLAG_BUF6M		(0x0040)
+#define IFLAG_BUF5M		(0x0020)
+#define IFLAG_BUF4M		(0x0010)
+#define IFLAG_BUF3M		(0x0008)
+#define IFLAG_BUF2M		(0x0004)
+#define IFLAG_BUF1M		(0x0002)
+#define IFLAG_BUF0M		(0x0001)
+#define IFLAG_BUFF_SET_ALL	(0xFFFF)
+#define IFLAG_BUFF_CLEAR_ALL	(0x0000)
+#define IFLAG_BUFnM(x)		(0x1<<(x))
+
+/*
+ *      Message Buffers
+ */
+#define MB_CNT_CODE(x)		(((x)&0x0F)<<24)
+#define MB_CNT_SRR		(0x00400000)
+#define MB_CNT_IDE		(0x00200000)
+#define MB_CNT_RTR		(0x00100000)
+#define MB_CNT_TIMESTAMP(x)	((x)&0xFFFF)
+#define MB_PRIO(x)		(((x)&0x7)<<29)
+#define MB_ID_STD		(0x07FF)
+#define MB_ID_EXT		(0x1FFFFFFF)
+#define MB_CODE_MASK		(0xF0FFFFFF)
+#define CAN_MB			16
+#define PDEV_MAX		2
+
+#endif
diff --git a/arch/m68k/include/asm/mcfsim.h b/arch/m68k/include/asm/mcfsim.h
index 25fea33..02f66cd 100644
--- a/arch/m68k/include/asm/mcfsim.h
+++ b/arch/m68k/include/asm/mcfsim.h
@@ -5,6 +5,7 @@
  *
  *	(C) Copyright 1999-2003, Greg Ungerer (gerg@snapgear.com)
  * 	(C) Copyright 2000, Lineo Inc. (www.lineo.com) 
+ * 	Copyright (C) 2010 Freescale Semiconductor, Inc. All rights reserved.
  */
 
 /****************************************************************************/
@@ -68,6 +69,7 @@
 #include <asm/mcf5441x_rtc.h>
 #include <asm/mcf5441x_scm.h>
 #include <asm/mcf5441x_pm.h>
+#include <asm/mcf5441x_flexcan.h>
 #endif
 
 /*
diff --git a/drivers/net/can/Kconfig b/drivers/net/can/Kconfig
index 2395c27..28cccd1 100644
--- a/drivers/net/can/Kconfig
+++ b/drivers/net/can/Kconfig
@@ -43,10 +43,10 @@ config CAN_FLEXCAN
 
 config CAN_MCF
 	tristate "Freescale MCF onboard CAN controller"
-	depends on CAN_FLEXCAN && (M5227x || M5253 || M532x || M548X)
+	depends on CAN_FLEXCAN && (M5227x || M5253 || M532x || M548X || M5441X)
 	---help---
 	  Say Y here if you want to support for
-	  Freescale MCF5227x/MCF525x/MCF532x/MCF548x
+	  Freescale MCF5227x/MCF525x/MCF532x/MCF548x/MCF5441X
 	  onboard dualCAN controller.
 
 config CAN_DEBUG_DEVICES
diff --git a/drivers/net/can/Makefile b/drivers/net/can/Makefile
index 60b35d1..7174569 100644
--- a/drivers/net/can/Makefile
+++ b/drivers/net/can/Makefile
@@ -6,3 +6,5 @@ obj-$(CONFIG_CAN_VCAN)		+= vcan.o
 
 obj-$(CONFIG_CAN_DEV)		+= can-dev.o
 can-dev-y			:= dev.o sysfs.o
+
+obj-$(CONFIG_CAN_FLEXCAN)      += flexcan/
diff --git a/drivers/net/can/flexcan/flexcan.c b/drivers/net/can/flexcan/flexcan.c
index 291b08d..a9e715a 100644
--- a/drivers/net/can/flexcan/flexcan.c
+++ b/drivers/net/can/flexcan/flexcan.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2008-2009 Freescale Semiconductor, Inc. All rights reserved.
+ * Copyright (C) 2008-2010 Freescale Semiconductor, Inc. All rights reserved.
  *
  * Author: Huan Wang, b18965@freescale.com, Fri Aug 08 2008
  *
@@ -13,6 +13,9 @@
  * Tue Dec 08 2009 ChengJu Cai <b22600@freescale.com>
  * - support for MCF532x MCF5253 MCF5227x's FlexCAN
  *
+ * Thu May 20 2010 Lanttor Guo <Lanttor.Guo@freescale.com>
+ * - support for MCF5441X's FlexCAN
+ *
  * This file is part of the Linux kernel
  * This is free software; you can redistribute it and/or modify
  * it under the terms of the GNU General Public License as published by
@@ -80,8 +83,8 @@ static int set_reset_mode(struct net_device *dev)
 	/* disable error and bus off interrupt */
 	regs->canctrl &= ~(CANCTRL_ERRMSK | CANCTRL_BOFFMSK);
 
-
 	/* reset chip */
+	regs->canmcr &= ~(CANMCR_MDIS);
 	regs->canmcr |= CANMCR_SOFTRST;
 
 	for (i = 0; i < FLEXCAN_SET_MODE_RETRIES; i++) {
@@ -267,6 +270,24 @@ static int flexcan_open(struct net_device *dev)
 	MCF_PAR_FECI2CIRQ = MCF_PAR_FECI2CIRQ | 0x0283;
 	MCF_PAR_PSCn(2) = MCF_PAR_PSCn(2) & 0x0f;
 	MCF_PAR_PSCn(2) = MCF_PAR_PSCn(2) | 0x50;
+#elif defined(CONFIG_M5441X)
+	MCF_PM_PPMCR0 = 8;	/* enable FlexCAN0 clock */
+	MCF_PM_PPMCR0 = 9;	/* enable FlexCAN1 clock */
+
+	/* CAN0 */
+	MCF_GPIO_PAR_CANI2C =
+		(MCF_GPIO_PAR_CANI2C & MCF_GPIO_PAR_CANI2C_I2C0SCL_MASK) |
+		MCF_GPIO_PAR_CANI2C_I2C0SCL_CAN0TX;
+	MCF_GPIO_PAR_CANI2C =
+		(MCF_GPIO_PAR_CANI2C & MCF_GPIO_PAR_CANI2C_I2C0SDA_MASK) |
+		MCF_GPIO_PAR_CANI2C_I2C0SDA_CAN0RX;
+	/* CAN1 */
+	MCF_GPIO_PAR_CANI2C =
+		(MCF_GPIO_PAR_CANI2C & MCF_GPIO_PAR_CANI2C_CAN1TX_MASK) |
+		MCF_GPIO_PAR_CANI2C_CAN1TX_CAN1TX;
+	MCF_GPIO_PAR_CANI2C =
+		(MCF_GPIO_PAR_CANI2C & MCF_GPIO_PAR_CANI2C_CAN1RX_MASK) |
+		MCF_GPIO_PAR_CANI2C_CAN1RX_CAN1RX;
 #elif defined(CONFIG_M532x)
 	MCF_GPIO_PAR_FECI2C &= 0xF0;
 	MCF_GPIO_PAR_FECI2C |= MCF_GPIO_PAR_FECI2C_PAR_SDA(0x2) \
@@ -296,6 +317,13 @@ static int flexcan_open(struct net_device *dev)
 			IRQF_DISABLED, dev->name, dev);
 	ret = request_irq(dev->irq + 2, flexcan_isr, \
 			IRQF_DISABLED, dev->name, dev);
+#elif defined(CONFIG_M5441X)
+	ret = request_irq(dev->irq, flexcan_isr, \
+			IRQF_DISABLED, dev->name, dev);
+	ret = request_irq(dev->irq + 1, flexcan_err_isr, \
+			IRQF_DISABLED, dev->name, dev);
+	ret = request_irq(dev->irq + 3, flexcan_err_isr, \
+			IRQF_DISABLED, dev->name, dev);
 #elif defined(CONFIG_M532x) || defined(CONFIG_M5227x)
 	ret = request_irq(dev->irq, flexcan_isr, \
 			IRQF_DISABLED, dev->name, dev);
@@ -502,6 +530,10 @@ static int flexcan_close(struct net_device *dev)
 	free_irq(dev->irq, dev);
 	free_irq(dev->irq + 1, dev);
 	free_irq(dev->irq + 2, dev);
+#elif defined(CONFIG_M5441X)
+	free_irq(dev->irq, dev);
+	free_irq(dev->irq + 1, dev);
+	free_irq(dev->irq + 3, dev);
 #elif defined(CONFIG_M532x) || defined(CONFIG_M5227x)
 	free_irq(dev->irq, dev);
 	free_irq(dev->irq + 1, dev);
diff --git a/drivers/net/can/flexcan/mcf-flexcan.c b/drivers/net/can/flexcan/mcf-flexcan.c
index 07d044b..58266e2 100644
--- a/drivers/net/can/flexcan/mcf-flexcan.c
+++ b/drivers/net/can/flexcan/mcf-flexcan.c
@@ -1,5 +1,5 @@
 /*
- * Copyright (C) 2008-2009 Freescale Semiconductor, Inc. All rights reserved.
+ * Copyright (C) 2008-2010 Freescale Semiconductor, Inc. All rights reserved.
  *
  * Author: Huan Wang, b18965@freescale.com, Fri Aug 08 2008
  *
@@ -176,6 +176,57 @@ static struct platform_device mcf_flexcan[PDEV_MAX] = {
 
 };
 
+#elif defined(CONFIG_M5441X)
+static struct flexcan_platform_data m5441x_can_platform = {
+	.clock_src = 1,
+	.clock_frq = 125000000,
+};
+
+static struct resource mcf5441x_can0_resources[] = {
+	[0] = {
+		.start 		= 0xFC020000,
+		.end		= 0xFC0208C0,
+		.flags		= IORESOURCE_MEM,
+	},
+	[1] = {
+		.start		= 0 + 64 + 64,
+		.end		= 0 + 64 + 64,
+		.flags		= IORESOURCE_IRQ,
+	},
+};
+
+static struct resource mcf5441x_can1_resources[] = {
+	[0] = {
+		.start 		= 0xFC024000,
+		.end		= 0xFC0248C0,
+		.flags		= IORESOURCE_MEM,
+	},
+	[1] = {
+		.start		= 4 + 64 + 64,
+		.end		= 4 + 64 + 64,
+		.flags		= IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device mcf_flexcan[PDEV_MAX] = {
+	[0] = {
+		.name                   = "mcf-flexcan",
+		.id                     = 0,
+		.num_resources          = ARRAY_SIZE(mcf5441x_can0_resources),
+		.resource               = mcf5441x_can0_resources,
+		.dev.platform_data      = &m5441x_can_platform,
+		.dev.release		= mcf_flexcan_release,
+	},
+	[1] = {
+		.name                   = "mcf-flexcan",
+		.id                     = 1,
+		.num_resources          = ARRAY_SIZE(mcf5441x_can1_resources),
+		.resource               = mcf5441x_can1_resources,
+		.dev.platform_data      = &m5441x_can_platform,
+		.dev.release		= mcf_flexcan_release,
+	},
+
+};
 
 #elif defined(CONFIG_M532x)
 static struct flexcan_platform_data m532x_flexcan_platform = {
@@ -313,6 +364,10 @@ static int __init flexcan_of_to_pdev(void)
 
  int __init mcf_flexcan_init(void)
  {
+#if	defined (CONFIG_M5441X)
+	MCF_PM_PPMCR0 = 8;	/* enable FlexCAN0 clock */
+	MCF_PM_PPMCR0 = 9;	/* enable FlexCAN1 clock */
+#endif
 	int err = flexcan_of_to_pdev();
 
 	if (err) {
-- 
1.6.4

