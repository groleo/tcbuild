From 680f89d15acbd29c94d00d12c0ce61502efb25bf Mon Sep 17 00:00:00 2001
From: Shrek Wu <b16972@freescale.com>
Date: Mon, 5 Jul 2010 16:30:01 +0800
Subject: [PATCH] Fix the vlan output disable function bug.

After the vlan output function was enabled, The command line cannot
disable it. This patch try to fix this issue.

Signed-off-by: Shrek Wu <b16972@freescale.com>
---
 drivers/net/modelo_switch.c |   34 ++++++++++++++++++++++++++++++----
 1 files changed, 30 insertions(+), 4 deletions(-)

diff --git a/drivers/net/modelo_switch.c b/drivers/net/modelo_switch.c
index 7f5fbd6..f2c3525 100644
--- a/drivers/net/modelo_switch.c
+++ b/drivers/net/modelo_switch.c
@@ -1654,7 +1654,7 @@ int esw_vlan_input_process(struct switch_enet_private *fep,
 	fecp = fep->hwp;
 
 	/*we only support mode1 mode2 mode3 mode4*/
-	if ((mode < 0) || (mode > 3)) {
+	if ((mode < 0) || (mode > 5)) {
 		printk(KERN_ERR "%s: do not support the"
 			" VLAN input processing mode %d\n",
 			__func__, mode);
@@ -1681,7 +1681,12 @@ int esw_vlan_input_process(struct switch_enet_private *fep,
 				MCF_ESW_VRES_VLANID(port_vlanid)
 				| MCF_ESW_VRES_P0;
 
-		fecp->ESW_VIMEN |= MCF_ESW_VIMEN_EN0;
+		if (mode == 4)
+			fecp->ESW_VIMEN &= ~MCF_ESW_VIMEN_EN0;
+		else
+			fecp->ESW_VIMEN |= MCF_ESW_VIMEN_EN0;
+
+		fecp->ESW_VIMSEL &= ~MCF_ESW_VIMSEL_IM0(3);
 		fecp->ESW_VIMSEL |= MCF_ESW_VIMSEL_IM0(mode);
 	} else if (port == 1) {
 		if (vlan_verify_en == 1)
@@ -1689,7 +1694,12 @@ int esw_vlan_input_process(struct switch_enet_private *fep,
 				MCF_ESW_VRES_VLANID(port_vlanid)
 				| MCF_ESW_VRES_P1;
 
-		fecp->ESW_VIMEN |= MCF_ESW_VIMEN_EN1;
+		if (mode == 4)
+			fecp->ESW_VIMEN &= ~MCF_ESW_VIMEN_EN1;
+		else
+			fecp->ESW_VIMEN |= MCF_ESW_VIMEN_EN1;
+
+		fecp->ESW_VIMSEL &= ~MCF_ESW_VIMSEL_IM1(3);
 		fecp->ESW_VIMSEL |= MCF_ESW_VIMSEL_IM1(mode);
 	} else if (port == 2) {
 		if (vlan_verify_en == 1)
@@ -1697,7 +1707,12 @@ int esw_vlan_input_process(struct switch_enet_private *fep,
 				MCF_ESW_VRES_VLANID(port_vlanid)
 				| MCF_ESW_VRES_P2;
 
-		fecp->ESW_VIMEN |= MCF_ESW_VIMEN_EN2;
+		if (mode == 4)
+			fecp->ESW_VIMEN &= ~MCF_ESW_VIMEN_EN2;
+		else
+			fecp->ESW_VIMEN |= MCF_ESW_VIMEN_EN2;
+
+		fecp->ESW_VIMSEL &= ~MCF_ESW_VIMSEL_IM2(3);
 		fecp->ESW_VIMSEL |= MCF_ESW_VIMSEL_IM2(mode);
 	} else {
 		printk(KERN_ERR "%s: do not support the port %d\n",
@@ -1705,6 +1720,14 @@ int esw_vlan_input_process(struct switch_enet_private *fep,
 		return -2;
 	}
 
+#ifdef debug_vlan_intput_config
+	printk(KERN_INFO "%s: ESW_VLANV %x, ESW_VIMSEL %x, "
+		"ESW_VIMEN %x, ESW_PID[0] %x, ESW_PID[1] %x, "
+		"ESW_PID[2] %x", __func__,
+		fecp->ESW_VLANV, fecp->ESW_VIMSEL, fecp->ESW_VIMEN,
+		fecp->ESW_PID[0], fecp->ESW_PID[1], fecp->ESW_PID[2]);
+#endif
+	return 0;
 
 }
 
@@ -1738,10 +1761,13 @@ int esw_vlan_output_process(struct switch_enet_private *fep,
 	}
 
 	if (port == 0) {
+		fecp->ESW_VOMSEL &= ~MCF_ESW_VOMSEL_OM0(3);
 		fecp->ESW_VOMSEL |= MCF_ESW_VOMSEL_OM0(mode);
 	} else if (port == 1) {
+		fecp->ESW_VOMSEL &= ~MCF_ESW_VOMSEL_OM1(3);
 		fecp->ESW_VOMSEL |= MCF_ESW_VOMSEL_OM1(mode);
 	} else if (port == 2) {
+		fecp->ESW_VOMSEL &= ~MCF_ESW_VOMSEL_OM2(3);
 		fecp->ESW_VOMSEL |= MCF_ESW_VOMSEL_OM2(mode);
 	} else {
 		printk(KERN_ERR "%s: do not support the port %d\n",
-- 
1.6.4

